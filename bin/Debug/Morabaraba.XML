<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>Morabaraba</name></assembly>
<members>
<member name="M:ProgramData.initializeGame">
 <summary>
 Function to initialize and run the game
 </summary>
</member>
<member name="M:ProgramData.runPlacingPhase``1(ProgramData.GameState)">
 <summary>
 Function to run the placing phase of the game
 </summary>
 <param name="gameState">Curret State of the game</param>
</member>
<member name="M:ProgramData.placePiece(ProgramData.Player,ProgramData.GameState)">
 <summary>
 Function to palce players
 </summary>
 <param name="player">Player who is placing cows</param>
 <param name="state">Current state of the game</param>
</member>
<member name="M:ProgramData.runMovingPhase(ProgramData.GameState)">
 <summary>
 Function to run the moving phase of the game 
 </summary>
 <param name="state">State of the game</param>
</member>
<member name="M:ProgramData.movePiece(ProgramData.Player,ProgramData.GameState)">
 <summary>
 Function to move players piece and return updated game state
 </summary>
 <param name="player">Player who is making move</param>
 <param name="state">Current game state</param>
</member>
<member name="M:ProgramData.checkMill(ProgramData.Position,ProgramData.Player,ProgramData.Player,ProgramData.GameState)">
 <summary>
 Function to check if a mill has been made on the board by the player
 </summary>
 <param name="player">Player who is being checked for a mill</param>
 <param name="state">Current state of the game</param>
</member>
<member name="M:ProgramData.switchCow(ProgramData.Position,ProgramData.Position,ProgramData.Player)">
 <summary>
 Helper Function to swap cows in player list of cows
 </summary>
 <param name="oldPos">Position of old cow</param>
 <param name="newPos">Position of new cow</param>
 <param name="player">Player who cows belong to</param>
</member>
<member name="M:ProgramData.isFlying(ProgramData.Player)">
 <summary>
 Helper function to determine if player has flying cows
 </summary>
 <param name="player"></param>
</member>
<member name="M:ProgramData.flyCows(ProgramData.Player)">
 <summary>
 Helper function to fly a players cows and return that cow list
 </summary>
 <param name="player"></param>
</member>
<member name="M:ProgramData.shootCow(ProgramData.Player,ProgramData.GameState)">
 <summary>
 Function to shoot cows 
 </summary>
 <param name="player">Player who is the shooter</param>
 <param name="state">Current state of the game</param>
</member>
<member name="M:ProgramData.inMill(ProgramData.Position,Microsoft.FSharp.Collections.FSharpList{ProgramData.Cow})">
 <summary>
 Helper function to check if players cow is in a mill that they own 
 </summary>
 <param name="pos">Position of cow in possible mill</param>
 <param name="cows">List of players cows</param>
</member>
<member name="M:ProgramData.getPossibleMills(ProgramData.Position)">
 <summary>
 Helper function to get all possible mills involving the given position 
 </summary>
 <param name="pos">position to get mills for</param>
</member>
<member name="M:ProgramData.checkPhase(ProgramData.GameState)">
 <summary>
 Function to determine if game should move to next phase
 </summary>
 <param name="state"></param>
</member>
<member name="M:ProgramData.isValidMove(ProgramData.Position,ProgramData.Player,ProgramData.Player)">
 <summary>
 Function to make sure that the move given is valid and check if position is already taken
 </summary>
 <param name="inputPos">Move that is being made</param>
 <param name="player">Player making the move</param>
 <param name="opponent">Opponent of player</param>
</member>
<member name="M:ProgramData.printBoard(ProgramData.GameState)">
 <summary>
 Function to print the board based on game state 
 </summary>
 <param name="state">Current state of the game</param>
</member>
<member name="M:ProgramData.isValidInput(System.String,ProgramData.Phase)">
 <summary>
 function to make sure input is in correct format
 </summary>
 <param name="str">input to validate</param>
 <param name="phase">phase of the game</param>
</member>
<member name="M:ProgramData.getPosFromCows(Microsoft.FSharp.Collections.FSharpList{ProgramData.Cow})">
 <summary>
 Helper function that extracts a list of positions from a list of cows
 </summary>
 <param name="cows">List of cows to get positons from </param>
</member>
<member name="M:ProgramData.getPos(ProgramData.Cow)">
 <summary>
 Function to extract position from cow union
 </summary>
</member>
<member name="M:ProgramData.getOpponent(ProgramData.Player,ProgramData.GameState)">
 <summary>
 Helper function to get players opponent
 </summary>
 <param name="player">Current player</param>
 <param name="state">Current GameState</param>
</member>
<member name="M:ProgramData.printErr(System.String)">
 <summary>
 Generic Print error function that prints msg to console
 </summary>
 <param name="msg">Message to print</param>
</member>
<member name="M:ProgramData.strToPos(System.String)">
 <summary>
 Helper function to convert string represenation of grid position to Position data type
 </summary>
 <param name="pos">position represented as a string</param>
</member>
</members>
</doc>
